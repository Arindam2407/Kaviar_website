/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleTreeSubset,
  MerkleTreeSubsetInterface,
} from "../../MerkleTreeSubset.sol/MerkleTreeSubset";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_typeOfList",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashValue",
        type: "bytes32",
      },
    ],
    name: "RootAddedSubset",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE_SUBSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE_SUBSET",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE_SUBSET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_leafSubset",
        type: "bytes32",
      },
    ],
    name: "_insertSubset",
    outputs: [
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "rootSubset",
        type: "bytes32",
      },
      {
        internalType: "bytes32[20]",
        name: "pathElementsSubset",
        type: "bytes32[20]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goodActor",
        type: "address",
      },
    ],
    name: "allowlistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blacklist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "badActor",
        type: "address",
      },
    ],
    name: "blacklistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndexSubset",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "filledSubtreesSubset",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastRootSubset",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_right",
        type: "bytes32",
      },
    ],
    name: "hashLeftRightSubset",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasherSubset",
    outputs: [
      {
        internalType: "contract HasherSubset",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "actor",
        type: "address",
      },
    ],
    name: "isAllowlisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "actor",
        type: "address",
      },
    ],
    name: "isBlacklisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownRootSubset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levelsSubset",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndexSubset",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rootsSubset",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "typeOfList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "badActor",
        type: "address",
      },
    ],
    name: "unAllowlistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "goodActor",
        type: "address",
      },
    ],
    name: "unBlacklistAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zerosSubset",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052601463ffffffff1660809063ffffffff168152506000600360006101000a81548163ffffffff021916908363ffffffff1602179055506000600360046101000a81548163ffffffff021916908363ffffffff1602179055503480156200006957600080fd5b50604051620026043803806200260483398181016040528101906200008f9190620004b1565b33606860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080606860146101000a81548160ff021916908315150217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060007f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c60001b9050600281908060018154018082558091505060019003906000526020600020016000909190919091505560018190806001815401808255809150506001900390600052602060002001600090919091909150556000600190505b60805163ffffffff168163ffffffff1610156200023e57620001d482836200027760201b60201c565b9150600282908060018154018082558091505060019003906000526020600020016000909190919091505560018290806001815401808255809150506001900390600052602060002001600090919091909150558080620002359062000537565b915050620001ab565b506200025181826200027760201b60201c565b600460006064811062000269576200026862000569565b5b0181905550505050620007f8565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10620002e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002d890620005f9565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c1062000349576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003409062000691565b60405180910390fd5b6000604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b8152600401620003bd919062000778565b602060405180830381865afa158015620003db573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004019190620007c6565b91505092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200043c826200040f565b9050919050565b6200044e816200042f565b81146200045a57600080fd5b50565b6000815190506200046e8162000443565b92915050565b60008115159050919050565b6200048b8162000474565b81146200049757600080fd5b50565b600081519050620004ab8162000480565b92915050565b60008060408385031215620004cb57620004ca6200040a565b5b6000620004db858286016200045d565b9250506020620004ee858286016200049a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff82169050919050565b6000620005448262000527565b915063ffffffff8214156200055e576200055d620004f8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64600082015250565b6000620005e160208362000598565b9150620005ee82620005a9565b602082019050919050565b600060208201905081810360008301526200061481620005d2565b9050919050565b7f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006200067960218362000598565b915062000686826200061b565b604082019050919050565b60006020820190508181036000830152620006ac816200066a565b9050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b620006e881620006d3565b82525050565b6000620006fc8383620006dd565b60208301905092915050565b6000602082019050919050565b6200072081620006b3565b6200072c8184620006be565b92506200073982620006c9565b8060005b8381101562000770578151620007548782620006ee565b9650620007618362000708565b9250506001810190506200073d565b505050505050565b60006040820190506200078f600083018462000715565b92915050565b620007a081620006d3565b8114620007ac57600080fd5b50565b600081519050620007c08162000795565b92915050565b600060208284031215620007df57620007de6200040a565b5b6000620007ef84828501620007af565b91505092915050565b608051611de26200082260003960008181610570015281816106360152610a7e0152611de26000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063a7cd52cb116100c3578063f191aad01161007c578063f191aad014610407578063f192d55c14610423578063f3290d7514610441578063f9f92be41461045d578063fce111f01461048d578063fe575a87146104ab57610158565b8063a7cd52cb1461031f578063a9ab9b741461034f578063c128b83c1461037f578063c55640e3146103af578063cae196ca146103cd578063d40cf659146103eb57610158565b806367b90a181161011557806367b90a181461025b578063714498d6146102795780638751bbc5146102975780638da5cb5b146102b5578063939baa4a146102d35780639ce5f1e51461030357610158565b806305a3b8091461015d578063261ab9f31461018d5780632fd9bca0146101bd5780633f4ab65e146101ef57806348d8d4271461021f5780635f67d25d1461023d575b600080fd5b61017760048036038101906101729190611251565b6104db565b6040516101849190611299565b60405180910390f35b6101a760048036038101906101a291906112ea565b610531565b6040516101b49190611330565b60405180910390f35b6101d760048036038101906101d29190611377565b61054c565b6040516101e69392919061146e565b60405180910390f35b610209600480360381019061020491906114a6565b6108ba565b6040516102169190611330565b60405180910390f35b610227610a42565b60405161023491906114e6565b60405180910390f35b610245610a58565b6040516102529190611560565b60405180910390f35b610263610a7c565b60405161027091906114e6565b60405180910390f35b610281610aa0565b60405161028e91906114e6565b60405180910390f35b61029f610ab6565b6040516102ac9190611330565b60405180910390f35b6102bd610aeb565b6040516102ca919061158a565b60405180910390f35b6102ed60048036038101906102e89190611377565b610b11565b6040516102fa9190611299565b60405180910390f35b61031d60048036038101906103189190611251565b610bbf565b005b61033960048036038101906103349190611251565b610cf2565b6040516103469190611299565b60405180910390f35b610369600480360381019061036491906112ea565b610d12565b6040516103769190611330565b60405180910390f35b610399600480360381019061039491906112ea565b610d36565b6040516103a69190611330565b60405180910390f35b6103b7610d5a565b6040516103c491906114e6565b60405180910390f35b6103d5610d5f565b6040516103e291906115b4565b60405180910390f35b61040560048036038101906104009190611251565b610d83565b005b610421600480360381019061041c9190611251565b610eb6565b005b61042b610fea565b6040516104389190611299565b60405180910390f35b61045b60048036038101906104569190611251565b610ffd565b005b61047760048036038101906104729190611251565b611131565b6040516104849190611299565b60405180910390f35b610495611151565b6040516104a291906115b4565b60405180910390f35b6104c560048036038101906104c09190611251565b611175565b6040516104d29190611299565b60405180910390f35b6000606a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6004816064811061054157600080fd5b016000915090505481565b6000806105576111cb565b6000600360049054906101000a900463ffffffff1690507f0000000000000000000000000000000000000000000000000000000000000000600261059b9190611731565b63ffffffff168163ffffffff1614156105e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e0906117e3565b60405180910390fd5b6001600360048282829054906101000a900463ffffffff1661060b9190611803565b92506101000a81548163ffffffff021916908363ffffffff160217905550600085905060008060005b7f000000000000000000000000000000000000000000000000000000000000000063ffffffff168163ffffffff1610156107c2576000600286610677919061186c565b63ffffffff1614156107225783925060028163ffffffff16815481106106a05761069f61189d565b5b906000526020600020015491508360018263ffffffff16815481106106c8576106c761189d565b5b906000526020600020018190555060028163ffffffff16815481106106f0576106ef61189d565b5b9060005260206000200154868263ffffffff16601481106107145761071361189d565b5b602002018181525050610794565b60018163ffffffff168154811061073c5761073b61189d565b5b9060005260206000200154925083915060018163ffffffff16815481106107665761076561189d565b5b9060005260206000200154868263ffffffff166014811061078a5761078961189d565b5b6020020181815250505b61079e83836108ba565b93506002856107ad91906118cc565b945080806107ba906118fd565b915050610634565b5060646001600360009054906101000a900463ffffffff166107e49190611803565b6107ee919061186c565b600360006101000a81548163ffffffff021916908363ffffffff160217905550826004600360009054906101000a900463ffffffff1663ffffffff166064811061083b5761083a61189d565b5b01819055507fecbbb24d6529812449e2916586c65e1dc08eedee76354356c7de29489e305690600360009054906101000a900463ffffffff168460405161088392919061192a565b60405180910390a16001600360049054906101000a900463ffffffff166108aa9190611953565b8396509650505050509193909250565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018360001c10610921576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610918906119d3565b60405180910390fd5b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018260001c10610986576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097d90611a65565b60405180910390fd5b6000604051806040016040528085815260200184815250905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663299e5660826040518263ffffffff1660e01b81526004016109f89190611b09565b602060405180830381865afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a399190611b39565b91505092915050565b600360009054906101000a900463ffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600360049054906101000a900463ffffffff1681565b60006004600360009054906101000a900463ffffffff1663ffffffff1660648110610ae457610ae361189d565b5b0154905090565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060001b821415610b275760009050610bba565b6000600360009054906101000a900463ffffffff1690505b60048163ffffffff1660648110610b5957610b5861189d565b5b0154831415610b6c576001915050610bba565b60008163ffffffff161415610b8057606490505b8080610b8b90611b66565b915050600360009054906101000a900463ffffffff1663ffffffff168163ffffffff161415610b3f5760009150505b919050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4690611bdc565b60405180910390fd5b610c58816104db565b610c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8e90611c48565b60405180910390fd5b6000606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b606a6020528060005260406000206000915054906101000a900460ff1681565b60028181548110610d2257600080fd5b906000526020600020016000915090505481565b60018181548110610d4657600080fd5b906000526020600020016000915090505481565b606481565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0a90611bdc565b60405180910390fd5b610e1c81611175565b610e5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5290611cb4565b60405180910390fd5b6000606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3d90611bdc565b60405180910390fd5b610f4f816104db565b15610f8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8690611d20565b60405180910390fd5b6001606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b606860149054906101000a900460ff1681565b606860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461108d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108490611bdc565b60405180910390fd5b61109681611175565b156110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cd90611d8c565b60405180910390fd5b6001606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60696020528060005260406000206000915054906101000a900460ff1681565b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b6000606960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b604051806102800160405280601490602082028036833780820191505090505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061121e826111f3565b9050919050565b61122e81611213565b811461123957600080fd5b50565b60008135905061124b81611225565b92915050565b600060208284031215611267576112666111ee565b5b60006112758482850161123c565b91505092915050565b60008115159050919050565b6112938161127e565b82525050565b60006020820190506112ae600083018461128a565b92915050565b6000819050919050565b6112c7816112b4565b81146112d257600080fd5b50565b6000813590506112e4816112be565b92915050565b600060208284031215611300576112ff6111ee565b5b600061130e848285016112d5565b91505092915050565b6000819050919050565b61132a81611317565b82525050565b60006020820190506113456000830184611321565b92915050565b61135481611317565b811461135f57600080fd5b50565b6000813590506113718161134b565b92915050565b60006020828403121561138d5761138c6111ee565b5b600061139b84828501611362565b91505092915050565b600063ffffffff82169050919050565b6113bd816113a4565b82525050565b600060149050919050565b600081905092915050565b6000819050919050565b6113ec81611317565b82525050565b60006113fe83836113e3565b60208301905092915050565b6000602082019050919050565b611420816113c3565b61142a81846113ce565b9250611435826113d9565b8060005b8381101561146657815161144d87826113f2565b96506114588361140a565b925050600181019050611439565b505050505050565b60006102c08201905061148460008301866113b4565b6114916020830185611321565b61149e6040830184611417565b949350505050565b600080604083850312156114bd576114bc6111ee565b5b60006114cb85828601611362565b92505060206114dc85828601611362565b9150509250929050565b60006020820190506114fb60008301846113b4565b92915050565b6000819050919050565b600061152661152161151c846111f3565b611501565b6111f3565b9050919050565b60006115388261150b565b9050919050565b600061154a8261152d565b9050919050565b61155a8161153f565b82525050565b60006020820190506115756000830184611551565b92915050565b61158481611213565b82525050565b600060208201905061159f600083018461157b565b92915050565b6115ae816112b4565b82525050565b60006020820190506115c960008301846115a5565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b600185111561165557808604811115611631576116306115cf565b5b60018516156116405780820291505b808102905061164e856115fe565b9450611615565b94509492505050565b60008261166e576001905061172a565b8161167c576000905061172a565b8160018114611692576002811461169c576116cb565b600191505061172a565b60ff8411156116ae576116ad6115cf565b5b8360020a9150848211156116c5576116c46115cf565b5b5061172a565b5060208310610133831016604e8410600b84101617156117005782820a9050838111156116fb576116fa6115cf565b5b61172a565b61170d848484600161160b565b92509050818404811115611724576117236115cf565b5b81810290505b9392505050565b600061173c826113a4565b9150611747836113a4565b925061175863ffffffff848461165e565b905092915050565b600082825260208201905092915050565b7f4d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c656160008201527f66732063616e2062652061646465640000000000000000000000000000000000602082015250565b60006117cd602f83611760565b91506117d882611771565b604082019050919050565b600060208201905081810360008301526117fc816117c0565b9050919050565b600061180e826113a4565b9150611819836113a4565b92508263ffffffff03821115611832576118316115cf565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611877826113a4565b9150611882836113a4565b9250826118925761189161183d565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006118d7826113a4565b91506118e2836113a4565b9250826118f2576118f161183d565b5b828204905092915050565b6000611908826113a4565b915063ffffffff82141561191f5761191e6115cf565b5b600182019050919050565b600060408201905061193f60008301856113b4565b61194c6020830184611321565b9392505050565b600061195e826113a4565b9150611969836113a4565b92508282101561197c5761197b6115cf565b5b828203905092915050565b7f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64600082015250565b60006119bd602083611760565b91506119c882611987565b602082019050919050565b600060208201905081810360008301526119ec816119b0565b9050919050565b7f5f72696768742073686f756c6420626520696e7369646520746865206669656c60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611a4f602183611760565b9150611a5a826119f3565b604082019050919050565b60006020820190508181036000830152611a7e81611a42565b9050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000602082019050919050565b611abb81611a85565b611ac58184611a90565b9250611ad082611a9b565b8060005b83811015611b01578151611ae887826113f2565b9650611af383611aa5565b925050600181019050611ad4565b505050505050565b6000604082019050611b1e6000830184611ab2565b92915050565b600081519050611b338161134b565b92915050565b600060208284031215611b4f57611b4e6111ee565b5b6000611b5d84828501611b24565b91505092915050565b6000611b71826113a4565b91506000821415611b8557611b846115cf565b5b600182039050919050565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b6000611bc6600d83611760565b9150611bd182611b90565b602082019050919050565b60006020820190508181036000830152611bf581611bb9565b9050919050565b7f41646472657373206e6f7420616c6c6f77656400000000000000000000000000600082015250565b6000611c32601383611760565b9150611c3d82611bfc565b602082019050919050565b60006020820190508181036000830152611c6181611c25565b9050919050565b7f41646472657373206e6f7420626c61636b6c6973746564000000000000000000600082015250565b6000611c9e601783611760565b9150611ca982611c68565b602082019050919050565b60006020820190508181036000830152611ccd81611c91565b9050919050565b7f4164647265737320616c726561647920616c6c6f776564000000000000000000600082015250565b6000611d0a601783611760565b9150611d1582611cd4565b602082019050919050565b60006020820190508181036000830152611d3981611cfd565b9050919050565b7f4164647265737320616c726561647920626c61636b6c69737465640000000000600082015250565b6000611d76601b83611760565b9150611d8182611d40565b602082019050919050565b60006020820190508181036000830152611da581611d69565b905091905056fea26469706673582212202330ddf26bb7a0a2dc798c61bf5aae083d28c126aa05af1b0d175bed5a3fe65464736f6c634300080a0033";

type MerkleTreeSubsetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleTreeSubsetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleTreeSubset__factory extends ContractFactory {
  constructor(...args: MerkleTreeSubsetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _hasher: string,
    _typeOfList: boolean,
    overrides?: Overrides & { from?: string }
  ): Promise<MerkleTreeSubset> {
    return super.deploy(
      _hasher,
      _typeOfList,
      overrides || {}
    ) as Promise<MerkleTreeSubset>;
  }
  override getDeployTransaction(
    _hasher: string,
    _typeOfList: boolean,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(_hasher, _typeOfList, overrides || {});
  }
  override attach(address: string): MerkleTreeSubset {
    return super.attach(address) as MerkleTreeSubset;
  }
  override connect(signer: Signer): MerkleTreeSubset__factory {
    return super.connect(signer) as MerkleTreeSubset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleTreeSubsetInterface {
    return new utils.Interface(_abi) as MerkleTreeSubsetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleTreeSubset {
    return new Contract(address, _abi, signerOrProvider) as MerkleTreeSubset;
  }
}
